solve OR bug:
>>>OR<<<
A=X
A=Y
Doesn't work as I am using StatementList

think about:
R: For 7pm
H: I can do 8m
probably "H: I can do 8m" should be:
TIME=8pm 0.4
NO_AVAILABILITY[TIME=7PM]=True 0.4

think about conditions:
  e.g. min reservation size 5

add prepositions to state
  positive_prep
  negative_prep

  ?VAR=value 0.4
  examples:
  Did you say 4pm?
  TIME=4pm 0.3
  ?TIME=4pm +0.3
  !TIME=?
  *TIME
  these are part of the state
  @positive
  @negative

  Am I all set?
  ?CONFIRM=True +0.5
  !CONFIRM=False +0.5
  *CONFIRM


Add confidence (absolute and relative)
  think about this - do i really need both?
  what happens if VAR changes value? keeps same value?
  how to implement diffs?
  VAR=value 0.4 # absolute
  VAR=value +0.4 # relative
  ProbStatement
    prob
    prob_delta = 0

Verifies implemented as interest + statement + preposition
For 4pm
TIME=4pm 0.7
?TIME=4pm +0.7
---
Yes
@positive
---
Yes for 4pm
@positive
TIME=4pm +0.3
---
Are you Google?
BOT_IDENTITY=Google 0.3
?BOT_IDENTITY=Google +0.3
*BOT_IDENTITY
---
Did you say for tomorrow for 5pm?
*DATE
DATE=tomorrow 0.3
?DATE=tomorrow +0.3
*TIME
TIME=5pm 0.3
?TIME=5pm +0.3

add support for hold, repeats, sorry --> independent of use case

Allow goals for not_incorrect(x)
  Do I need this? Maybe happens automatically

Add rendering logic for intents: When human says "you're all set" if we haven't given the name yet, rendering should be different

Add printing of all values (genValues(filename))


Document syntax:
Statement: VAR=value
Express interest: *VAR
Comment: #
Separator: ---

Rename State.statement_list to State.statements

refactor State to AssertionsState, InterestsState, ...
